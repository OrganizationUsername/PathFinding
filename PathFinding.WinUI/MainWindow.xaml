<Window
    x:Class="Pathfinding.WinUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Pathfinding.WinUI"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="150" Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TabView Grid.Column="0" CanReorderTabs="False" IsAddTabButtonVisible="False" TabWidthMode="SizeToContent">
            <TabView.TabItems>
                <TabViewItem Header="First" IsClosable="False">
                    <StackPanel>
                        <TextBlock Text="{x:Bind ViewModel.HoveredEntityDescription, Mode=OneWay}"/>
                        <Button Content="FindPath" Click="FindPath"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Always Calc"/>
                            <CheckBox IsChecked="{x:Bind ViewModel.AlwaysPath, Mode=TwoWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Allow Diagonal"/>
                            <CheckBox Command="{x:Bind ViewModel.ChangeDiagonalCommand}" 
                                      CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}"
                                      IsChecked="{x:Bind ViewModel.AllowDiagonal, Mode=TwoWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Show Numbers"/>
                            <CheckBox IsChecked="{x:Bind ViewModel.ShowNumbers, Mode=TwoWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBox Text="{x:Bind ViewModel.TileString, Mode=TwoWay}" AcceptsReturn="True" Width="30" Height="18"/>
                            <Button Content="Push to load" Click="LoadMapString"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Current Player: " />
                            <TextBlock Text="{x:Bind ViewModel.CurrentPlayer, Mode=OneWay}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="FPS: "/>
                            <TextBlock Text="{x:Bind ViewModel.Fps, Mode=OneWay}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Tiles scored: "/>
                            <TextBlock Text="{x:Bind ViewModel.CellsScored, Mode=OneWay}" />
                        </StackPanel>
                    </StackPanel>
                </TabViewItem>
                <TabViewItem Header="Reset" IsClosable="False">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Width"/>
                            <TextBox Width="50" Text="{x:Bind ViewModel.NewTileWidth, Mode=TwoWay}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Height"/>
                            <TextBox Width="50" Text="{x:Bind ViewModel.NewTileHeight, Mode=TwoWay}"/>
                        </StackPanel>
                        <Button Content="Reset" Command="{x:Bind ViewModel.ResetCommand}"/>
                    </StackPanel>
                </TabViewItem>
            </TabView.TabItems>
        </TabView>
        <Grid Grid.Column="1" x:Name="renderGrid">
            <!-- ScrollViewer here serves only as a focusable control so that the KeyDown event fires -->
            <ScrollViewer KeyDown="Canvas_KeyDown" IsTabStop="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" >
                <canvas:CanvasSwapChainPanel HorizontalAlignment="Left" VerticalAlignment="Top"
                    Width="{x:Bind ViewModel.PixelWidth, Mode=OneWay}" Height="{x:Bind ViewModel.PixelHeight, Mode=OneWay}" x:Name="swapChainPanel"
                    PointerMoved="Canvas_PointerMoved" PointerExited="Canvas_PointerExited" PointerPressed="Canvas_PointerPressed"
                    PointerReleased="Canvas_PointerReleased" PointerWheelChanged="Canvas_PointerWheelChanged" />

                <!--ContextMenu="{StaticResource myMenu}" ContextMenuOpening="TextImage_ContextMenuOpening"-->
            </ScrollViewer>
        </Grid>
    </Grid>
</Window>
